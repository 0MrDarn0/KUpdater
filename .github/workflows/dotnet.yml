name: .NET Desktop CI

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build, Test and Package (Windows)
    runs-on: windows-latest

    env:
      SOLUTION: KUpdater.sln
      CONFIGURATION: Release
      DOTNET_VERSION: "10.0.x"
      ARTIFACTS_PATH: artifacts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.SOLUTION }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Run tests (if any)
        shell: pwsh
        run: |
            $csproj = Get-ChildItem -Recurse -Filter '*.csproj' -ErrorAction SilentlyContinue
            if ($csproj) {
                dotnet test ${{ env.SOLUTION }} --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal
            }
            else { Write-Host "No csproj found for tests." }


      - name: Pack (only on tags)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          dotnet pack ${{ env.SOLUTION }} --configuration ${{ env.CONFIGURATION }} -o ${{ env.ARTIFACTS_PATH }}

      - name: Publish folder artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **\bin\${{ env.CONFIGURATION }}\**
            ${{ env.ARTIFACTS_PATH }}/**

  optional-cross-checks:
    name: Quick library checks (Linux, macOS)
    runs-on: ${{ matrix.os }}
    needs: []
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        dotnet-version: ["10.0.x"]
    if: false

    steps:
      - name: Placeholder
        run: echo "Disabled by default. Enable if you want platform-agnostic checks for library projects."
